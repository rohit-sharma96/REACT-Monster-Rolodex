{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAGaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAM,UAAUC,IAAG,+BAA4BH,EAAMI,QAAQC,GAA1C,4BACxB,6BAAML,EAAMI,QAAQE,OACpB,4BAAIN,EAAMI,QAAQG,YCHbC,G,MAAW,SAACR,GAAD,OAChB,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAyBA,QAAWA,GAAvBA,EAAQC,WCJpBM,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAaC,EAAf,EAAeA,aAAf,OACrB,uBACEZ,UAAW,SACXa,KAAK,SACLF,YAAcA,EACdG,SAAUF,MCiCDG,E,kDAlCb,aAAc,IAAD,8BACX,gBAaFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAcF,EAAEG,OAAOC,OAAQC,QAAQC,IAAIN,EAAEG,OAAOC,SAbpE,EAAKG,MAAQ,CACXf,SAAY,GACZU,YAAc,IAJL,E,qDAQb,WAAoB,IAAD,OACjBM,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAACT,SAAWoB,S,oBAM3C,WACE,MAAkCC,KAAKN,MAA/Bf,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZY,EAAmBtB,EAASuB,QAAO,SAAA5B,GAAO,OAC9CA,EAAQE,KAAK2B,cAAcC,SAASf,EAAYc,kBAElD,OACA,sBAAKhC,UAAU,MAAf,UACA,iDACA,cAAC,EAAD,CACEW,YAAY,kBACZC,aAAgBiB,KAAKjB,eAEvB,cAAC,EAAD,CAAUJ,SAAYsB,W,GA9BRI,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8058462c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) =>(\r\n    <div className=\"card-container\">\r\n        <img alt = \"monster\" src = {`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n        <h2 >{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) =>(\r\n        <div className='card-list'>\r\n        {   props.monsters.map(monster => (\r\n            <Card key = {monster.id} monster = {monster}/> \r\n            ))}\r\n        </div>\r\n        );\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => (\r\n    <input\r\n      className =\"search\" \r\n      type=\"search\" \r\n      placeholder= {placeholder} \r\n      onChange={handleChange}/>\r\n)","import React from 'react'\nimport './App.css';\n\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox} from './components/search-box/search-box.component'\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state = {\n      monsters  : [],\n      searchField : ''\n    }\n  }\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({monsters : users}))\n  }\n\n  handleChange = (e) =>{\n    this.setState({ searchField : e.target.value}, console.log(e.target.value));\n  }\n  render(){\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n      )\n    return (\n    <div className=\"App\">\n    <h1>Monster Rolodex</h1>\n    <SearchBox\n      placeholder=\"search monsters\"\n      handleChange = {this.handleChange}\n    />\n    <CardList monsters = {filteredMonsters}/>\n  </div>)\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}